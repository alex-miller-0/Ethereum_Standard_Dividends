// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"minTokensToCreate","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"closingTime","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"refund","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"isFueled","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_tokenHolder","type":"address"}],"name":"createTokenProxy","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"inputs":[{"name":"_minTokensToCreate","type":"uint256"},{"name":"_closingTime","type":"uint256"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"value","type":"uint256"}],"name":"FuelingToDate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"CreatedToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Refund","type":"event"}],
    binary: "60606040818152806103bf833960a09052516080516000819055600182905550506103918061002e6000396000f36060604052361561006c5760e060020a60003504630c3b7b96811461006e57806318160ddd146100775780634b6753bc14610080578063590e1ae31461008957806370a082311461009a578063a9059cbb146100be578063b7bc2c84146100d7578063baac5300146100e3575b005b6101c660015481565b6101c660055481565b6101c660005481565b61006c600034111561025d57610002565b6101c6600435600160a060020a038116600090815260046020526040902054919050565b6101c6600435602435600060003411156101d057610002565b6101c660025460ff1681565b6101c6600435600080548190421080156100fd5750600034115b156102585750600160a060020a03821680825260046020908152604080842080543490810190915560058054820190556003835290842080548201905560608181529092917fdbccb92686efceafb9bb7e0394df7f58f71b954061b81afb57109bf247d3d75a91a26001546005541080159061017c575060025460ff16155b156101bd576005546002805460ff1916600117905560609081527ff381a3e2428fdda36615919e8d9c35878d9eb0cf85ac6edf575088e80e4c147e90602090a15b50600192915050565b6060908152602090f35b33600160a060020a03168152600460205260408120548290108015906101f65750600082115b1561025257604080822080548490039055600160a060020a03808516808452918320805485019055606084815233909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a35060015b92915050565b610002565b60005442118015610271575060025460ff16155b1561038f5733600160a060020a03166000818152600360205260408120549060609081818185876185025a03f1925050501561038f5733600160a060020a03167fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d6003600050600033600160a060020a03168152602001908152602001600020600050546040518082815260200191505060405180910390a26004600050600033600160a060020a0316815260200190815260200160002060005054600560008282825054039250508190555060006004600050600033600160a060020a031681526020019081526020016000206000508190555060006003600050600033600160a060020a03168152602001908152602001600020600050819055505b56",
    unlinked_binary: "60606040818152806103bf833960a09052516080516000819055600182905550506103918061002e6000396000f36060604052361561006c5760e060020a60003504630c3b7b96811461006e57806318160ddd146100775780634b6753bc14610080578063590e1ae31461008957806370a082311461009a578063a9059cbb146100be578063b7bc2c84146100d7578063baac5300146100e3575b005b6101c660015481565b6101c660055481565b6101c660005481565b61006c600034111561025d57610002565b6101c6600435600160a060020a038116600090815260046020526040902054919050565b6101c6600435602435600060003411156101d057610002565b6101c660025460ff1681565b6101c6600435600080548190421080156100fd5750600034115b156102585750600160a060020a03821680825260046020908152604080842080543490810190915560058054820190556003835290842080548201905560608181529092917fdbccb92686efceafb9bb7e0394df7f58f71b954061b81afb57109bf247d3d75a91a26001546005541080159061017c575060025460ff16155b156101bd576005546002805460ff1916600117905560609081527ff381a3e2428fdda36615919e8d9c35878d9eb0cf85ac6edf575088e80e4c147e90602090a15b50600192915050565b6060908152602090f35b33600160a060020a03168152600460205260408120548290108015906101f65750600082115b1561025257604080822080548490039055600160a060020a03808516808452918320805485019055606084815233909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a35060015b92915050565b610002565b60005442118015610271575060025460ff16155b1561038f5733600160a060020a03166000818152600360205260408120549060609081818185876185025a03f1925050501561038f5733600160a060020a03167fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d6003600050600033600160a060020a03168152602001908152602001600020600050546040518082815260200191505060405180910390a26004600050600033600160a060020a0316815260200190815260200160002060005054600560008282825054039250508190555060006004600050600033600160a060020a031681526020019081526020016000206000508190555060006003600050600033600160a060020a03168152602001908152602001600020600050819055505b56",
    address: "0xbba561c47cc82a8e5f078c533c2df81d52ad895a",
    generated_with: "2.0.9",
    contract_name: "TokenCreation"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("TokenCreation error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("TokenCreation error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("TokenCreation error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("TokenCreation error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.TokenCreation = Contract;
  }

})();
